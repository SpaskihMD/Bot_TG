from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import CommandStart, Command

from app.sqlbase import add_database, get_photo_bynumber


import app.keyboard as kb  #–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞

from aiogram.fsm.context import FSMContext  #–°–æ—Å—Ç–æ—è–Ω–∏—è
from aiogram.fsm.state import State, StatesGroup


# –ö–ª–∞—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è "–∑–∞–ø–∏—Å–∞—Ç—å"
class Numm(StatesGroup):
    number = State()
    photo = State()
#--------------------------------------------------------------------

#–ö–ª–∞—Å—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–π—Ç–∏"
class Search(StatesGroup):
    number_id = State()
    
#--------------------------------------------------------------------

router = Router()

photoids = []

@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}!\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É.',reply_markup=kb.main)

#--------------------------------------------------------------------

#–°–æ–±–∏—Ä–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ –∫–æ–º–∞–Ω–¥—ã –ó–∞–ø–∏—Å—å
#–î–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ü–µ –¥–∞–Ω–Ω—ã–µ –≤ sql
@router.message(F.text =='–ó–∞–ø–∏—Å–∞—Ç—å üìù')
async def cmd_save(message: Message, state: FSMContext):
    await state.set_state(Numm.number)
    await message.answer(f'{message.from_user.first_name} –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ë–ï–ó "–ï-"‚õîÔ∏è')


@router.message(Numm.number)
async def cmd_number(message: Message, state: FSMContext):
    number = message.text
    await state.update_data(number=number)
    await state.set_state(Numm.photo)
    await message.answer('–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–æ—Ç–æ üì∏')


@router.message(Numm.photo, F.photo)
async def reg_photo(message: Message, state: FSMContext):
    photo=message.photo[-1].file_id
    await state.update_data(photo=photo)

    ###–í—ã–≤–æ–¥ –∏–Ω—Ñ—ã —Å–æ–±—Ä–∞–Ω–Ω–æ–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    data = await state.get_data()
    '''
    #–í—ã–≤–æ–¥ —Å–æ–±—Ä–∞–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ FSM
    await message.answer_photo(photo=data['photo'],
                               caption=f'–ï-{data['number']}')
    '''
    #–ø–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ sql
    number = data.get('number')
    await add_database(number,photo)

    #–≤—ã–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
    await state.clear()
    await message.answer('–ì–æ—Ç–æ–≤–æüëç\n–ù–∞–∂–º–∏—Ç–µ üëâ /start –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥')
#--------------------------------------------------------------------

#–ü–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ
@router.message(F.text == '–ù–∞–π—Ç–∏ üîç')
async def cmd_poisk(message:Message, state: FSMContext):
    await state.set_state(Search.number_id)
    await message.answer(f'{message.from_user.first_name} –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ë–ï–ó "–ï-"‚õîÔ∏è')
    

@router.message(Search.number_id)
async def fsm_num_id(message:Message, state: FSMContext):
    number_id = message.text
    await state.update_data(number_id=number_id)
    data = await state.get_data()
    
    number_id = data.get('number_id')
    
    
    photo = await get_photo_bynumber(number_id)
    
    
    for i in photo:
        await message.answer_photo(photo=i[0])
        
        
    #–≤—ã–≤–æ–¥ —Ç–æ–≥–æ —á—Ç–æ –ø–æ–ª—É—á–∏–ª –≤ –Ω–∞–π—Ç–∏
    #await message.answer(number_id)
    await state.clear()

    await message.answer('–ù–∞–∂–º–∏—Ç–µ üëâ /start –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª–æ')







